!function(){"use strict";class e{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._element=t,this._inputList=[...this._element.querySelectorAll(this._inputSelector)],this._buttonElement=this._element.querySelector(this._submitButtonSelector)}_showInputError(e,t){const s=this._element.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._element.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=" "}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._element.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class t{constructor(e){let{popupSelector:t}=e;this._popupElement=t}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._closeModalOnRemoteClick)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._closeModalOnRemoteClick)}_handleEscClose=e=>{e.preventDefault(),"Escape"===e.key&&this.close()};_closeModalOnRemoteClick=e=>{e.target.classList.contains("modal")&&this.close()};setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>this.close()))}}class s extends t{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._handleFormSubmit=s}_getInputValues(){return this._inputData={},this._inputList.forEach((e=>{this._inputData[e.name]=e.value})),this._inputData}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}close(){this._popupForm.reset(),super.close()}}const n={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},i=document.querySelector("#profile-edit-modal"),o=document.querySelector("#profile-modal-form"),r=document.querySelector("#add-card-modal"),l=document.querySelector("#add-card-form"),a=document.querySelector("#preview-image-modal"),c=document.querySelector(".profile__edit-button"),d=document.querySelector(".profile__add-button"),u=new class{constructor(e){let{userNameSelector:t,userJobSelector:s}=e;this._userNameElement=document.querySelector(t),this._userJobElement=document.querySelector(s)}getUserInfo(){return{name:this._userNameElement.textContent,job:this._userJobElement.textContent}}setUserInfo(e){this._userNameElement.textContent=e.name,this._userJobElement.textContent=e.job}}({userNameSelector:".profile__title",userJobSelector:".profile__description"}),_=new s({popupSelector:i,handleFormSubmit:e=>{u.setUserInfo(e)}}),m=new class extends t{constructor(e){super({popupSelector:e}),this._imageModal=this._popupElement.querySelector(".modal__image"),this._imageModalName=this._popupElement.querySelector(".modal__image-name")}open(e){let{name:t,link:s}=e;this._imageModal.src=s,this._imageModal.alt=t,this._imageModalName.textContent=t,super.open()}}(a);function h(e){return new class{constructor(e,t){let{cardData:s,handleImageClick:n}=e;this._name=s.name,this._link=s.link,this._handleImageClick=n,this._cardSelector=document.querySelector(t)}_getTemplate(){return this._cardSelector.content.querySelector(".card__element").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeIcon),this._deleteButton.addEventListener("click",this._handleDeleteCard),this._cardImage.addEventListener("click",(()=>this._handleImageClick({name:this._name,link:this._link})))}_handleLikeIcon=()=>{this._likeButton.classList.toggle("card__like-button_active")};_handleDeleteCard=()=>{this._element.remove(),this._element=null};generateCard(){this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardImage=this._element.querySelector(".card__image"),this._setEventListeners();const e=this._element.querySelector(".card__name");return this._cardImage.src=this._link,this._cardImage.alt=this._name,e.textContent=this._name,this._element}}({cardData:e,handleImageClick:()=>{m.open(e)}},"#card-template").generateCard()}const p=new class{constructor(e,t){let{items:s,renderer:n}=e;this._renderedItems=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._renderedItems.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>{const t=h(e);p.addItem(t)}},".gallery__cards"),E=new s({popupSelector:r,handleFormSubmit:e=>{const t=h(e);p.addItem(t)}});_.setEventListeners(),m.setEventListeners(),E.setEventListeners(),p.renderItems();const S=new e(n,o),v=new e(n,l);S.enableValidation(),v.enableValidation(),c.addEventListener("click",(()=>{const e=u.getUserInfo();_.setInputValues(e),S.resetValidation(),_.open()})),d.addEventListener("click",(()=>{v.resetValidation(),E.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,